import{Entity,Block,Player,EquipmentSlot,world,ItemStack,EnchantmentTypes,ItemLockMode}from"@minecraft/server";import{uiManager,ActionFormData,MessageFormData,ModalFormData}from"@minecraft/server-ui";Object.defineProperties(Entity.prototype,{isPlayer:{value:function(){return this instanceof Player}},isEntity:{value:function(){return this instanceof Entity}},isBlock:{value:function(){return this instanceof Block}},container:{get:function(){return this.getComponent("minecraft:inventory")?.container}},health:{set:function(v){this.getComponent("minecraft:health")?.setCurrentValue(v)},get:function(){return this.getComponent("minecraft:health")?.currentValue}}}),Object.defineProperties(Player.prototype,{kick:{value:function(reason){return 0<this.runCommand(`kick ${JSON.stringify(this.name)} `+(reason??"")).successCount},configurable:!0},closeAllForms:{value:function(){uiManager.closeAllForms(this)},configurable:!0},isRiding:{get:function(){return void 0!==this.getComponent("minecraft:riding")?.entityRidingOn},configurable:!0},joinedAt:{get:function(){return this.getDynamicProperty("box@joinedAt")},configurable:!0},equip:{get:function(){let com=this.getComponent("equippable");return{getHead:()=>com?.getEquipment(EquipmentSlot.Head),getChest:()=>com?.getEquipment(EquipmentSlot.Chest),getLegs:()=>com?.getEquipment(EquipmentSlot.Legs),getFeet:()=>com?.getEquipment(EquipmentSlot.Feet),getMainHand:()=>com?.getEquipment(EquipmentSlot.Mainhand),getOffHand:()=>com?.getEquipment(EquipmentSlot.Offhand)}},configurable:!0}}),world.afterEvents.playerSpawn.subscribe(ev=>{var{player:ev,initialSpawn}=ev;initialSpawn&&ev.setDynamicProperty("box@joinedAt",Date.now())}),Object.defineProperties(Block.prototype,{isPlayer:{value:function(){return this instanceof Player}},isEntity:{value:function(){return this instanceof Entity}},isBlock:{value:function(){return this instanceof Block}}}),Object.defineProperties(ItemStack.prototype,{enchantment:{get:function(){let com=this.getComponent("enchantable"),getEnchantmentType=enchantmentType=>{if("string"==typeof enchantmentType){if(void 0===EnchantmentTypes.get(enchantmentType))throw new Error("Invalid enchantment type: "+enchantmentType);enchantmentType=EnchantmentTypes.get(enchantmentType)}return enchantmentType};return{getEnchant:function(enchantmentType){return com?.getEnchantment(enchantmentType)},getAllEnchants:function(){return com?.getEnchantments()},addEnchant:function(enchantmentType,level){com?.addEnchantment({type:getEnchantmentType(enchantmentType),level:level})},canAddEnchant:function(enchantmentType,level){return com?.canAddEnchantment({type:getEnchantmentType(enchantmentType),level:level})},removeEnchant:function(enchantmentType){com?.removeEnchantment(getEnchantmentType(enchantmentType))},removeAllEnchants:function(){com?.removeAllEnchantments()},hasEnchant:function(enchantmentType){return com?.hasEnchantment(getEnchantmentType(enchantmentType))}}}}});class ActionFormBox{form;callbacks=[];backCallback;cancelledCallback;constructor(title){this.form=new ActionFormData,title&&this.form.title(title)}title(titleText){return this.form.title(titleText),this}body(bodyText){return this.form.body(bodyText),this}button(text,iconPath,callback){return this.form.button(text,iconPath),callback&&this.callbacks.push(callback),this}back(callback){return this.backCallback=callback,this}cancel(callback){return this.cancelledCallback=callback,this}async show(player){this.backCallback&&this.form.button("Back","textures/ui/arrowLeft.png"),this.form.button("Close","textures/ui/redX1.png");var response=await this.form.show(player);if(response.canceled)this.cancelledCallback&&this.cancelledCallback(response.cancelationReason);else{if(void 0===response.selection)throw new Error("Selection is undefined");response.selection===this.callbacks.length?this.backCallback&&this.backCallback(player):(player=this.callbacks[response.selection])&&player()}}}class MessageFormBox{form=new MessageFormData;upperCallback;lowerCallback;cancelCallback;constructor(title){title&&this.form.title(title)}title(titleText){return this.form.title(titleText),this}body(bodyText){return this.form.body(bodyText),this}upperButton(text,callback){return this.form.button2(text),this.upperCallback=callback,this}lowerButton(text,callback){return this.form.button1(text),this.lowerCallback=callback,this}cancel(callback){return this.cancelCallback=callback,this}async show(player){var response=await this.form.show(player);response.canceled?this.cancelCallback&&this.cancelCallback(player,response.cancelationReason):1===response.selection?this.upperCallback&&this.upperCallback(player):0===response.selection&&this.lowerCallback&&this.lowerCallback(player)}}class ModalFormBox{form=new ModalFormData;bodyText;canSetBody=!0;callbacks=[];cancelCallback;body(bodyText){if(this.canSetBody)return this.bodyText=bodyText,this;throw new Error("Cannot set body after adding elements")}cancel(callback){return this.cancelCallback=callback,this}dropdown(label,options,defaultValueIndex,callback){return this.form.dropdown(this.formatLabel(label),options,defaultValueIndex),callback&&this.callbacks.push(callback),this}async show(player){var response=await this.form.show(player);if(response.canceled)this.cancelCallback&&this.cancelCallback(player,response.cancelationReason);else for(var i in this.callbacks)response.formValues?.length&&this.callbacks[i](player,response.formValues[i]);return response}slider(label,minimumValue,maximumValue,valueStep,defaultValue,callback){return this.form.slider(this.formatLabel(label),minimumValue,maximumValue,valueStep,defaultValue),callback&&this.callbacks.push(callback),this}submitButton(submitButtonText){return this.form.submitButton(submitButtonText),this}textField(label,placeholder,defaultValue,callback){return this.form.textField(this.formatLabel(label),placeholder??"",defaultValue),callback&&this.callbacks.push(callback),this}title(titleText){return this.form.title(titleText),this}toggle(label,defaultValue,callback){return this.form.toggle(this.formatLabel(label),defaultValue),callback&&this.callbacks.push(callback),this}formatLabel(label){if(!this.canSetBody)return label;if(this.canSetBody=!1,!this.bodyText)return label;if("string"==typeof label)return this.bodyText+`

§r`+label;if("object"==typeof label)return label={text:this.bodyText+`

§r`,...label};throw new Error("Invalid label type")}}var ColorUtils,ItemStackUtils,ScoreboardUtils;(ColorUtils=>{ColorUtils.ESCAPE="§",ColorUtils.MATCH_REGEXP=new RegExp(ColorUtils.ESCAPE+"[0-9a-fk-or]","g"),ColorUtils.clean=function(text){return text.replace(ColorUtils.MATCH_REGEXP,"")},ColorUtils.includesColor=function(text){return ColorUtils.MATCH_REGEXP.test(text)}})(ColorUtils=ColorUtils||{}),(ItemStackUtils=>{ItemStackUtils.toJSON=function(item){var dynamicProperties=item.getDynamicPropertyIds().map(key=>[key,item.getDynamicProperty(key)]),enchantments=item.getComponent("enchantable")?.getEnchantments().map(enchantment=>({level:enchantment.level,type:enchantment.type.id}));return{typeId:item.typeId,amount:item.amount,keepOnDeath:item.keepOnDeath,lockMode:item.lockMode,nameTag:item.nameTag,dynamicProperties:Object.fromEntries(dynamicProperties),canDestroy:item.getCanDestroy(),canPlaceOn:item.getCanPlaceOn(),lore:item.getLore(),components:{durability:{damage:item.getComponent("durability")?.damage},dyeable:{color:item.getComponent("dyeable")?.color},enchantable:{enchantments:enchantments}}}},ItemStackUtils.fromJSON=function(json){var key,value,com,item=new ItemStack(json.typeId,json.amount);item.keepOnDeath=json.keepOnDeath??!1,item.lockMode=json.lockMode??ItemLockMode.none,item.nameTag=json.nameTag;for([key,value]of Object.entries(json.dynamicProperties??{}))item.setDynamicProperty(key,value);if(item.setCanDestroy(json.canDestroy??[]),item.setCanPlaceOn(json.canPlaceOn??[]),item.setLore(json.lore??[]),json.components){if(json.components.durability&&(com=item.getComponent("durability"))&&(com.damage=json.components.durability.damage??0),json.components.dyeable){let com=item.getComponent("dyeable");com&&(com.color=json.components.dyeable.color??com.defaultColor)}if(json.components.enchantable){let com=item.getComponent("enchantable");if(com)for(var enchantment of json.components.enchantable.enchantments??[]){var enchantmentType=EnchantmentTypes.get(enchantment.type);if(!enchantmentType)throw new Error("Invalid enchantment type: "+enchantment.type);com.addEnchantment({type:enchantmentType,level:enchantment.level})}}}return item},ItemStackUtils.minimizeJSON=function(json){return json.components=Object.fromEntries(Object.entries(json.components??{}).filter(([key,value])=>!("durability"===key&&"damage"in value&&(0===value.damage||void 0===value.damage)||"dyeable"===key&&"color"in value&&void 0===value.color||"enchantable"===key&&"enchantments"in value&&0===value.enchantments?.length))),json=Object.fromEntries(Object.entries(json).filter(([key,value])=>!("keepOnDeath"===key&&!1===value||"lockMode"===key&&value===ItemLockMode.none||"nameTag"===key&&void 0===value||"canDestroy"===key&&0===value.length||"canPlaceOn"===key&&0===value.length||"lore"===key&&0===value.length)&&("dynamicProperties"===key?Object.values(value).some(v=>null!=v):"components"===key?Object.values(value).some(v=>null!=v&&0<Object.values(v).filter(Boolean).length):null!=value)))}})(ItemStackUtils=ItemStackUtils||{}),(ScoreboardUtils=>{function addObjective(id,display){return world.scoreboard.addObjective(id,display)}function getObjective(id){var object=world.scoreboard.getObjective(id);return object||addObjective(id)}ScoreboardUtils.addObjective=addObjective,ScoreboardUtils.getObjective=getObjective,ScoreboardUtils.deleteObjective=function(id){return world.scoreboard.removeObjective(id)},ScoreboardUtils.getScore=function(target,objective){try{return getObjective(objective).getScore(target)}catch{}},ScoreboardUtils.addScore=function(target,objective,value){return getObjective(objective).addScore(target,value)},ScoreboardUtils.setScore=function(target,objective,value){return getObjective(objective).setScore(target,value)},ScoreboardUtils.resetScore=function(target,objective){return getObjective(objective).removeParticipant(target)}})(ScoreboardUtils=ScoreboardUtils||{});export{ActionFormBox,ColorUtils,ItemStackUtils,MessageFormBox,ModalFormBox,ScoreboardUtils};